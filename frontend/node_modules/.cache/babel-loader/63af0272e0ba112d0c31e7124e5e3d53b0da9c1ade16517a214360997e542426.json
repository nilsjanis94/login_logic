{"ast":null,"code":"import axios from \"axios\";\n\n// Erstelle eine Axios-Instanz mit Basis-URL und Standardheader\nconst api = axios.create({\n  baseURL: \"http://127.0.0.1:8000/api/\",\n  // passe die URL an, falls nötig\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\n\n// Fügt einen Request-Interceptor hinzu, der den Token aus dem Local Storage anhängt\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem(\"authToken\");\n  if (token) {\n    config.headers[\"Authorization\"] = `Token ${token}`;\n  }\n  return config;\n}, error => Promise.reject(error));\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","error","Promise","reject"],"sources":["/Users/nilswolters/Library/Mobile Documents/com~apple~CloudDocs/Anwendungsentwicklung/GUI/django_projekte/login_window2/frontend/src/api.js"],"sourcesContent":["import axios from \"axios\";\n\n// Erstelle eine Axios-Instanz mit Basis-URL und Standardheader\nconst api = axios.create({\n  baseURL: \"http://127.0.0.1:8000/api/\", // passe die URL an, falls nötig\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n});\n\n// Fügt einen Request-Interceptor hinzu, der den Token aus dem Local Storage anhängt\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem(\"authToken\");\n    if (token) {\n      config.headers[\"Authorization\"] = `Token ${token}`;\n    }\n    return config;\n  },\n  (error) => Promise.reject(error)\n);\n\nexport default api; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAE,4BAA4B;EAAE;EACvCC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;EAC/C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAAC,eAAe,CAAC,GAAG,SAASK,KAAK,EAAE;EACpD;EACA,OAAOD,MAAM;AACf,CAAC,EACAI,KAAK,IAAKC,OAAO,CAACC,MAAM,CAACF,KAAK,CACjC,CAAC;AAED,eAAeX,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}